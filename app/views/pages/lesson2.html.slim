h1 lesson 2
h2 Занятие 2: Ссылки в Интернет 

p 1. Абсолютные ссылки
p 2. Относительные ссылки
p 3. Внутренние ссылки
p 4. Ссылки на электронную почту
p 5. Подборка ссылок

p Механизм ссылок является основой гипертекстового документа и позволяет адресовать любые ресурсы Internet.
p Для создания ссылки используется элемент A, в контейнере которого находится содержимое ссылки. Атрибут HREF задает адрес ресурса и протокол.

p Пример ссылки:
a href="http://www.specialist.ru" Сайт "Специалист" 

p В данном примере http обозначает название протокола (HypherText Transport Protocol), а www.specialist.ru - адрес, являющийся доменным именем 3-го уровня. Обратите внимание, что конкретное название файла в адресе отсутствует - в этом случае сервер загрузит файл, название которого задается настройками сервера (обычно index.htm, default.htm или другие). 

p В качестве протокола можно указать:
ftp - для лоступа к файловому серверу
mailto - для электронной почты

p Ссылки могут быть абсолютными или относительными.  



h3 1. Абсолютные ссылки

p Абсолютные ссылки адресуют полное доменное имя сайта и работают только при наличии подключения к Internet.

p Абсолютные ссылки начинаются с указания протокола, за ним следует доменное имя сайта и путь до конкретного ресурса (если нужно указать адрес конкретного файла).

p Можно также адресовать конкретную позицию внутри файла (удобно для создания оглавления). В этом случае помимо ссылки следует создать точку привязки (якорь), на которую будет указывать ссылка. Такие ссылки называют внутренними.

p Атрибут TARGET позволяет указать, в какое окно загружать адресуемый ресурс. Например, если TARGET=_BLANK, то ресурс загружается в новое окно.

p Атрибут TITLE определяет текст во всплывающей подсказке.

p Примеры абсолютных ссылок:



p 
a href="http://www.w3.org" сайт разработчиков спецификации HTML

p
a href="http://htmlbook.ru" Справочный сайт, посвященный HTML и CSS

p
a href="http://validator.w3.org" Проверка на валидность

p
a href="http://yuri-pavl.com/html4.pdf" Описание элементов HTML4 (файл PDF)



h3 2. Относительные ссылки

p Относительные ссылки адресуют ресурс относительно текущего ресурса. Они могут адресовать как ресурс в Internet, так и на локальной машине (в этом случае подключения к Internet не требуется).

p Примеры относительных  ссылок:

p pict.html
Иллюстрации

p gif3.gif
анимация

p intro.html
Введение

 
h3 3. Внутренние ссылки

p Внутренние ссылки адресуют точку привязки внутри документа. Точка привязки создается с помощью элемента A и атрибута NAME, либо с помощью любого элемента с атрибутом ID.

p Очень удобны внутренние ссылки для создания оглавления страницы

p Вот так выглядит метка: &lt;a name="metka"&gt;&lt;/a&gt; или так: &lt;div id="metka"&gt;

p Вот так выглядит ссылка на метку: &lt;а href="#metka"&gt;текст ссылки&lt;/a&gt;

Примеры внутренних ссылок:

p В начало страницы


h3 4. Ссылки на электронную почту

p Ссылка на электронную почту создается путем указания в качестве протокола mailto и последующего адреса электронной почты. Например, mailto:ivanov@specialist.ru.

p По щелчку на ссылке запускается почтовая программа (например, Outlook Express), с помощью которой пользователь формирует письмо и отсылает по указанному адресу.

//Можно в ссылке указать тему (subject), и даже текст сообщения (body) (но учтите, что валидация такого документа будет всегда проходить с ошибками):
//&lt;a href="mailto:ivanov@specialist.ru?subject=регистрация&body=пройдите регистрацию"&gt;


p Пример:
Связаться с авторами: author@mysite.ru


h3 5. Подборка ссылок

p 
a href="http://html5test.com" Тест браузера на поддержку элементов HTML5

p
a href="http://css3test.com" Тест браузера на поддержку свойств CSS level 3

p
a href="http://spec.piraruco.com/html5/index.htm" Спецификация HTML5 на русском

p
a href="http://csszengarden.com" Сайт, демонстрирующий возможности CSS. К одному и тому же коду HTML  применяются различные стили, и результат просто восхищает!

p
a href="http://favicon.ru" Сайт для генерации иконки сайта ("фавиконки")

p
a href="http://caniuse.com" Проверка поддержки свойств HTML5/CSS3

p
a href="http://www.chromeexperiments.com" Потрясающие эксперименты с самыми современными технологиями HTML-CSS-JavaScript


Иллюстрации в Интернет 

<!-- заголовок -->
Иллюстрации в Internet

<!-- введение -->

<p>Браузеры поддерживают следующие графические форматы:
GIF, JPEG, PNG и SVG.
<p>Файлы иллюстраций обычно размещают в папке IMAGES, причем такие папки следует создать как в корне сайта (для общих иллюстраций), так и для каждого раздела.

<p>Иллюстрация относится к inline элементам (разметка на уровне текста) и добавляется в код с помощью элемента IMG:
<img src="images/img.gif">

<!-- картинка -->
images.gif


<p>Каждый пиксель иллюстрации соответствует пикселю монитора, поэтому при создании иллюстрации нужно указывать размеры в пикселях, а не в миллиметрах. Разрешение иллюстрации должно быть 72ppi (пикселей на дюйм).
 Объем файла зависит от размеров иллюстрации, , но суммарный объем иллюстраций не должен превышать 150-200 кб, иначе процесс загрузки страницы может затянуться надолго.

<p>Полезные советы:
1. Нельзя масштабировать иллюстрацию, только задавая нужные размеры в теге IMG - пострадает качество и возрастет объем страницы. Воспользуйтесь Adobe PhotoShop для пересчета иллюстрации.
2. Если иллюстрация является ссылкой, то она отобразиться с бордюром. Чтобы его убрать, задайте в теге IMG атрибут BORDER="0".
3. Для размещения иллюстрации по центру поместите ее в блочный элемент, и уже для него задайте ALIGN="center".
4. Суммарный объем иллюстраций не должен превышать 150-200 кб, иначе процесс загрузки страницы может затянуться.
5. Ко всем значимым иллюстрациям добавляйте описание с помощью атрибута ALT - это значительно повысит информативность и usability (эргономику) сайта.


<!-- подзаголовок -->
1. Формат JPEG

<p>
<!-- картинка -->
images/jpeg1.jpg

Процесс сжатия по схеме JPEG состоит из нескольких шагов. На первом шаге производится 
  преобразование изображения из цветового пространства RGB в пространство YUV, 
  основанное на характеристиках яркости и цветности. Вся дальнейшая работа производится 
  именно с этим цветовым пространством, которое благодаря некоторым своим характеристикам 
  позволяет получать нам столь большие степени сжатия.

<p>
<!-- картинка -->
images/jpeg2.jpg

На следующем после 
  преобразования шаге изображение разделяется на квадратные участки размером 8х8 
  пикселей. После этого над каждым участком производится т.н. дискретное косинус-преобразование 
  (ДКП). При этом выполняется анализ каждого блока, разложение его на составляющие 
  цвета и подсчет частоты появления каждого цвета.


<p>Анализируя частотную 
  информацию о появлении цветов, удается избавиться от части информации уже в 
  процессе квантования. При этом цвета в верхней части спектра исключаются, что 
  практически не сказывается на зрительном восприятии образа. Также исключается 
  часть яркостной информации. Грубо говоря, JPG просто отбрасывает от яркостной 
  составляющей половину полезного сигнала, а от цветовой 3/4. Это, конечно, примерно, 
  т.к. существуют градации и более сложные схемы сжатия. 

<p>Если говорить научным языком, то JPG использует для сохранения ряды Фурье и 
  при больших степенях сжатия просто отбрасывает члены ряда высшего порядка. И 
  каждый раз при воспроизведении изображения на экране компьютер производит синтез. 
  Причем, достаточно ресурсоемкий и заметный на медленных компьютерах. Из этого 
  следует одно замечание - если Вы сохранили какой-нибудь рисунок в формате JPG, 
  то восстановить его обратно до последнего пикселя невозможно! Именно из-за этого 
  формат называется &quot;форматом с потерями&quot;, и именно поэтому не рекомендуется 
  пересжимать JPG-изображения, т.к. они обязательно станут хуже.

<p>Примеры файлов JPEG:


<p>Файлы высокого качества:
<!-- картинки -->
images/a-fine.jpg
images/b-fine.jpg

<p>Файлы низкого качества:
<!-- картинки -->
images/a-bad.jpg
images/b-bad.jpg

<!-- подзаголовок -->
2. Формат GIF

<p>Формат GIF был разработан 
  в 1987 году (GIF87a) фирмой CompuServe для передачи растровых изображений по 
  сетям. В 1989-м формат был модифицирован (GIF89a), были добавлены поддержка 
  прозрачности и анимации. GIF использует LZW-компрессию, что позволяет неплохо 
  сжимать файлы, в которых много однородных заливок (логотипы, надписи, схемы).


<p>GIF позволяет записывать 
  изображение &quot;через строчку&quot; (Interlaced), благодаря чему, имея только 
  часть файла, можно увидеть изображение целиком, но с меньшим разрешением. Это 
  достигается за счет записи, а затем подгрузки, сначала 1, 5, 10 и т.д. строчек 
  пикселов и растягивания данных между ними, вторым проходом следуют 2, 6, 11 
  строчки, разрешение изображения в браузере увеличивается. Таким образом, задолго 
  до окончания загрузки файла пользователь может понять, что внутри и решить, 
  стоит ли ждать, когда файл поднимется весь. 


<p>В GIF’e можно назначить 
  один или более цветов прозрачными, они станут невидимыми в браузерах и некоторых 
  других программах. Прозрачность обеспечивается за счет дополнительного Alpha-канала, 
  сохраняемого вместе с файлом. Кроме того файл GIF может содержать не одну, а 
  несколько растровых картинок, которые браузеры могут подгружать одну за другой 
  с указанной в файле частотой. Так достигается иллюзия движения (GIF-анимация).

<p>Основное ограничение формата GIF состоит в том, что максимальное количество 
  цветов - 256.

<p>Примеры файлов GIF:

<p>иллюстрация с малым количеством цветов:
<!-- картинка -->
images/gif1.gif

<p>иллюстрация с прозрачностью:
<!-- картинка -->
images/gif2.gif

<p>иллюстрация с анимацией:
<!-- картинка -->
images/gif3.gif

<!-- подзаголовок -->
3. Формат SVG

SVG - Scalable Vector Graphic - масштабируемая векторная графика. Позволяет масштабировать без потери качества. 
<!-- картинка -->
images/nature.svg

<!-- подзаголовок -->
4. Изображение в качестве ссылки

metro1.jpg
  metro1-mini.jpg   


<!-- подзаголовок -->
5. Фоновые изображения

<p>Иллюстрация может быть фоном. Для этого используется возможности стилей CSS:
<!-- <body style="background: url(fon1.jpg)"> -->
<!-- попробуйте в качестве фона для данной страницы файлы fon1.jpg,  fon2.jpg, fon3.jpg, fon4.jpg -->





p
=link_to 'return home', page_path('home')